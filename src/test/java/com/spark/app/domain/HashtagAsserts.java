package com.spark.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HashtagAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHashtagAllPropertiesEquals(Hashtag expected, Hashtag actual) {
        assertHashtagAutoGeneratedPropertiesEquals(expected, actual);
        assertHashtagAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHashtagAllUpdatablePropertiesEquals(Hashtag expected, Hashtag actual) {
        assertHashtagUpdatableFieldsEquals(expected, actual);
        assertHashtagUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHashtagAutoGeneratedPropertiesEquals(Hashtag expected, Hashtag actual) {
        assertThat(expected)
            .as("Verify Hashtag auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHashtagUpdatableFieldsEquals(Hashtag expected, Hashtag actual) {
        assertThat(expected)
            .as("Verify Hashtag relevant properties")
            .satisfies(e -> assertThat(e.getHashtagId()).as("check hashtagId").isEqualTo(actual.getHashtagId()))
            .satisfies(e -> assertThat(e.getHashtagName()).as("check hashtagName").isEqualTo(actual.getHashtagName()))
            .satisfies(e -> assertThat(e.getDataCreated()).as("check dataCreated").isEqualTo(actual.getDataCreated()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHashtagUpdatableRelationshipsEquals(Hashtag expected, Hashtag actual) {
        assertThat(expected)
            .as("Verify Hashtag relationships")
            .satisfies(e -> assertThat(e.getSparks()).as("check sparks").isEqualTo(actual.getSparks()));
    }
}
